mixin calendar(options) 
  -
    const [minRange, maxRange] =  options.rangeDays;    
    console.log(minRange, maxRange);
    week = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']
    const now = new Date();  
    const prevMonthLastDay = new Date(now.getFullYear(), now.getMonth(), 0);
    const firstDay = new Date(now.getFullYear(), now.getMonth(), 1);
    const lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0);
    
    const monthOptions = { year: 'numeric', month: 'long'}
    const monthString = now.toLocaleDateString('ru', monthOptions).replace(/\s+(Г.|г.)/,'')
    const dayNow = now.getDate()    
    
    let monthDays = Array(lastDay.getDate()).fill(null).map((_, i) => {
      return {day: i+1, class: ''}
      })

    const prevMonthDays =  Array(firstDay.getDay() - 1).fill(null)
      .map((_, index) => {
        return {day: prevMonthLastDay.getDate() - index, class: 'calendar__day_lighter'}
        }).reverse()
    let nextMonthDays = []
    if (monthDays.length % 7 !== 0)
      nextMonthDays =  Array(7 - monthDays.length % 7)
        .map((_, index) => {
      return {day: i+1, class: 'calendar__day_lighter'}
      })
      
    monthDays = [...prevMonthDays, ...monthDays, ...nextMonthDays]
    
    function fillCell(day){      
      console.log(minRange, maxRange);
      if (day == minRange)  return 'calendar__cell_fillend'      
      if (day == maxRange)  return 'calendar__cell_fillstart'
      if (day > minRange && day < maxRange ) return 'calendar__cell_fullfill'
      return null
    }

    function dayButton(day) {
      if (day == dayNow) return "green"            
      if (day == minRange  || day == maxRange) return "purple"                             
      return "transparent"
    }


  .calendar-wrapper
    .calendar.calendar_active.calendar_static
      .calendar__month.calendar_mb-10
        .card__row
          button.calendar__arrow="arrow_back"
          span.calendar__month-name=monthString
          button.calendar__arrow="arrow_forward"
      .calendar__body
        .calendar__weekday
          each weekDay in week
            span= weekDay
        .calendar__days
          each day  in monthDays
            if day
              .calendar__cell(class=fillCell(day.day))
                +button({
                  class: `calendar__day ${day.class}`,
                  background: dayButton(day.day),
                  size: "round",
                  simple: true})= day.day
          
      .controls
        .option.option__controls
          button.option__reset(aria-label="Очистить")
            |Очистить
          button.option__apply(aria-label="Применить")
            |Применить      
